{"version":3,"sources":["components/CDS/TextBox/TextBox.js","components/CDS/SelectBox/SelectBox.js","components/CDS/SwitchBoxPill/SwitchBoxPill.js","components/CDS/CheckBox/CheckBox.js","components/CDS/RadioButton/RadioButton.js","components/CDS/Input/Input.js","components/Input/InputDemo.js","components/Store/index.js","App.js","index.js","components/CDS/TextBox/index.module.sass"],"names":["TextBox","props","state","displayInfoInteractiveText","oldValue","comp","this","textInput","addEventListener","e","setState","sate","target","value","handleRawEvents","handleOver","undefined","console","log","style","stylesSuccess","textBoxContainer","success","join","validationStyle","config","validationStatus","document","getElementById","id","className","htmlFor","label","secondaryLabel","masking","type","inputFont","ref","input","onChange","handleChange","required","disabled","readOnly","readonly","placeholder","maxLength","maxlength","dataType","key","mask","maskChar","inputRef","defaultValue","bar","styleCDS","error","validationText","infoInteractive","infoStep1","onClick","toggleInteractiveText","info","Component","SelectBox","selectInput","selectBoxContainer","options","map","currentValue","index","arr","SwitchBoxPill","switchBoxPillInputA","switchBoxPillInputB","switchBoxPill","cds3_paragraph","optionA","name","checked","optionB","CheckBox","checkBoxInput","event","preventDefault","analyticsClickDetail","sss","checkmark","cBError","checkBoxContainer","details","moreDetails","cds3_caption","detailsTitle","aria-hidden","cds3_paragraphSmall","detailsContent","RadioButton","broadStyle","broad","radioButtonBroadItem","dinamicClassName","radioButtonItem","isInline","radioBox","Fragment","filled","radioButtonContainer","option","i","radioButton","radio_container_inline","filledMexican_inline","radioButtonContainer_inline","radioButtonItem_inline","radioButton_inline","Input","inputElement","elementType","InputDemo","openKeyBoard","bind","handleRawEventsPrimerNombre","handleChangePrimerNombre","counter","calle","alwaysShowMask","numero","cp","referencias","toFocus","setTimeout","focus","Store","device","useState","screenSize","href","data-icon","viewBox","fill","d","breakpoints","min","max","Infinity","App","useDevice","history","createBrowserHistory","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.b7496289.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styleCDS from \"../CDS.scss\";\r\nimport style from './index.module.sass';\r\n\r\nimport InputMask from 'react-input-mask';\r\n\r\nclass TextBox extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    // [null -> Clean, 0 -> Info, 1 -> InfoInteractive, 2 -> Error , 3 -> Success]  \r\n    this.state = {\r\n      displayInfoInteractiveText: false,\r\n      oldValue: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Attach events to the input raw DOM element\r\n    let comp = this;\r\n    this.textInput.addEventListener(\"keydown\", function (e) {\r\n      comp.setState(\r\n        {\r\n          ...this.sate,\r\n          oldValue: e.target.value\r\n        });\r\n      comp.props.handleRawEvents(\"keydown\", e);\r\n    });\r\n    this.textInput.addEventListener(\"keyup\", function (e) {\r\n      comp.props.handleRawEvents(\"keyup\", e);\r\n    });\r\n    this.textInput.addEventListener(\"keypress\", function (e) {\r\n      comp.props.handleRawEvents(\"keypress\", e);\r\n    });\r\n    this.textInput.addEventListener(\"input\", function (e) {\r\n      comp.props.handleRawEvents(\"input\", e, comp.state.oldValue);\r\n    });\r\n    this.textInput.addEventListener(\"focus\", (e) => {\r\n      if (this.props.handleOver && this.props.handleOver !== undefined) {\r\n        this.props.handleOver();\r\n      }\r\n      comp.props.handleRawEvents(\"focus\", e);\r\n    });\r\n    this.textInput.addEventListener(\"blur\", function (e) {\r\n      comp.props.handleRawEvents(\"blur\", e);\r\n    });\r\n    this.textInput.addEventListener(\"paste\", function (e) {\r\n      comp.props.handleRawEvents(\"paste\", e);\r\n    });\r\n    this.textInput.addEventListener(\"click\", function (e) {\r\n      comp.props.handleRawEvents(\"click\", e);\r\n    });\r\n    this.textInput.addEventListener(\"change\", function (e) {\r\n      comp.props.handleRawEvents(\"change\", e);\r\n    });\r\n  }\r\n\r\n  toggleInteractiveText() {\r\n    if (this.state.displayInfoInteractiveText) {\r\n      this.setState({ displayInfoInteractiveText: false });\r\n    } else {\r\n      this.setState({ displayInfoInteractiveText: true });\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    let consoleIt = () => {\r\n      console.log(style);\r\n    };\r\n    consoleIt();\r\n    let filled = false;\r\n    \r\n    let stylesSuccess = [style.textBoxContainer, style.success].join(' ');\r\n    let validationStyle = this.props.config.validationStatus===3 ? stylesSuccess : style.textBoxContainer;\r\n\r\n    if (document.getElementById(this.props.config.id) !== null) {\r\n      if (document.getElementById(this.props.config.id).value !== \"\") {\r\n        filled = true;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className={`${validationStyle}`} >\r\n\r\n    <label className={'f1'} htmlFor={this.props.config.id}>{this.props.config.label} {this.props.config.secondaryLabel && <span className={style.secondaryLabel}>{this.props.config.secondaryLabel}</span>}</label>\r\n        {this.props.config.masking === false &&\r\n          <input type={this.props.config.type} id={this.props.config.id}\r\n            className={style.inputFont}\r\n            ref={(input) => { this.textInput = input; }} \r\n            onChange={this.props.handleChange} \r\n            required={this.props.config.required} \r\n            disabled={this.props.config.disabled} \r\n            readOnly={this.props.config.readonly} \r\n            placeholder={this.props.config.placeholder}\r\n            maxLength={this.props.config.maxlength}\r\n            value={this.props.config.value === undefined ? null : this.props.config.value}\r\n            dataType={this.props.config.dataType} />\r\n        }\r\n        {this.props.config.masking === true &&\r\n          <InputMask key={this.props.config.key || this.props.config.id} \r\n          type={this.props.config.type}\r\n          id={this.props.config.id} \r\n          mask={this.props.config.mask} \r\n          maskChar={this.props.config.maskChar} \r\n          inputRef={(input) => { this.textInput = input; }} \r\n          onChange={this.props.handleChange} \r\n          defaultValue={this.props.config.defaultValue} \r\n          required={this.props.config.required} \r\n          disabled={this.props.config.disabled} \r\n          readOnly={this.props.config.readonly} \r\n          placeholder={this.props.config.placeholder} />\r\n        }\r\n        <span className={style.bar}></span>\r\n        \r\n\r\n\r\n\r\n        {this.props.config.validationStatus === 3 &&\r\n          <div className={styleCDS.success}><i className=\" dfmxs dfmxs-canvas-success icon-check-success \"></i></div>\r\n        }\r\n        {this.props.config.validationStatus === 2 &&\r\n          <div className={styleCDS.error}><i className=\"dfmxs dfmxs-canvas-error\"></i>{this.props.config.validationText.error}</div>\r\n        }\r\n        {this.props.config.validationStatus === 0 &&\r\n          <div className={styleCDS.infoInteractive}>\r\n            <div className={styleCDS.infoStep1}><i className=\"dfmxs dfmxs-canvas-info\" onClick={() => this.toggleInteractiveText()}></i></div>\r\n            {this.state.displayInfoInteractiveText === true &&\r\n              <div className={styleCDS.info}>{this.props.config.validationText.info}</div>\r\n            }\r\n          </div>\r\n        }\r\n        {this.props.config.validationStatus === 1 &&\r\n          <div className={styleCDS.info}><i className=\"dfmxs dfmxs-canvas-info  \"></i>{this.props.config.validationText.info}</div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default TextBox;","import React, { Component } from 'react';\r\nimport styleCDS from \"../CDS.scss\"\r\nimport style from \"./SelectBox.scss\"\r\n\r\n\r\nclass SelectBox extends Component{\r\n    \r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        // [null -> Clean, 0 -> Info, 1 -> InfoInteractive, 2 -> Error , 3 -> Success]\r\n    }\r\n    \r\n    componentDidMount(){\r\n        // Attach events to the input raw DOM element\r\n        let comp = this;\r\n        this.selectInput.addEventListener(\"focus\", function (e) {\r\n            comp.props.handleRawEvents(\"focus\", e);\r\n        });\r\n        this.selectInput.addEventListener(\"blur\", function (e) {\r\n            comp.props.handleRawEvents(\"blur\", e);\r\n        });\r\n        this.selectInput.addEventListener(\"paste\", function (e) {\r\n            comp.props.handleRawEvents(\"paste\", e);\r\n        });\r\n        this.selectInput.addEventListener(\"click\", function (e) {\r\n            comp.props.handleRawEvents(\"click\", e);\r\n        });\r\n        this.selectInput.addEventListener(\"change\", function (e) {\r\n            comp.props.handleRawEvents(\"change\", e);\r\n        });\r\n    }\r\n    \r\n    render(){\r\n\r\n        return (\r\n            <div className={style.selectBoxContainer}>\r\n                \r\n                <label htmlFor={this.props.config.id}>{this.props.config.label}</label>\r\n                <select id={this.props.config.id} className={style.inputFont}\r\n                    ref={(input) => { this.selectInput = input; }} \r\n                    onChange={this.props.handleChange} \r\n                    required={this.props.config.required}\r\n                    disabled={this.props.config.disabled} \r\n                    readOnly={this.props.config.readonly} \r\n                    value={this.props.config.defaultValue} >\r\n                    {this.props.config.options.map((currentValue, index, arr) => {\r\n                        let disabled = currentValue.disabled === true ? \"disabled\" : \"\";\r\n                        return <option value={currentValue.value} key={index} disabled={disabled}>{currentValue.label}</option>;\r\n                    })}\r\n                </select>\r\n                \r\n                {this.props.config.validationStatus === 2 &&\r\n                    <div className={styleCDS.error}><i className=\"dfmxs dfmxs-canvas-error\"></i>{this.props.config.validationText.error}</div>\r\n                }\r\n                {this.props.config.validationStatus === 1 &&\r\n                    <div className={styleCDS.info}><i className=\"dfmxs dfmxs-canvas-info\"></i>{this.props.config.validationText.info}</div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default SelectBox;","import React, { Component } from 'react';\r\nimport styleCDS from \"../CDS.scss\"\r\nimport style from \"./SwitchBoxPill.scss\"\r\n\r\nclass SwitchBoxPill extends Component{\r\n    \r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        // [null -> Clean, 0 -> Info, 1 -> InfoInteractive, 2 -> Error , 3 -> Success]\r\n    }\r\n    \r\n    componentDidMount(){\r\n        // Attach events to the input raw DOM element\r\n        let comp = this;\r\n        this.switchBoxPillInputA.addEventListener(\"focus\", function (e) {\r\n            comp.props.handleRawEvents(\"focus\", e);\r\n        });\r\n        this.switchBoxPillInputA.addEventListener(\"blur\", function (e) {\r\n            comp.props.handleRawEvents(\"blur\", e);\r\n        });\r\n        this.switchBoxPillInputA.addEventListener(\"paste\", function (e) {\r\n            comp.props.handleRawEvents(\"paste\", e);\r\n        });\r\n        this.switchBoxPillInputA.addEventListener(\"click\", function (e) {\r\n            comp.props.handleRawEvents(\"click\", e);\r\n        });\r\n        this.switchBoxPillInputA.addEventListener(\"change\", function (e) {\r\n            comp.props.handleRawEvents(\"change\", e);\r\n        });\r\n        \r\n        this.switchBoxPillInputB.addEventListener(\"focus\", function (e) {\r\n            comp.props.handleRawEvents(\"focus\", e);\r\n        });\r\n        this.switchBoxPillInputB.addEventListener(\"blur\", function (e) {\r\n            comp.props.handleRawEvents(\"blur\", e);\r\n        });\r\n        this.switchBoxPillInputB.addEventListener(\"paste\", function (e) {\r\n            comp.props.handleRawEvents(\"paste\", e);\r\n        });\r\n        this.switchBoxPillInputB.addEventListener(\"click\", function (e) {\r\n            comp.props.handleRawEvents(\"click\", e);\r\n        });\r\n        this.switchBoxPillInputB.addEventListener(\"change\", function (e) {\r\n            comp.props.handleRawEvents(\"change\", e);\r\n        });\r\n    }\r\n    \r\n  render() {\r\n    return (\r\n      <div className={style.switchBoxPill}>\r\n        <div className={styleCDS.cds3_paragraph}>\r\n          {this.props.config.label}\r\n        </div>\r\n        <input type=\"radio\" id={this.props.config.optionA.id} name={this.props.config.name} value={this.props.config.optionA.value} ref={(input) => { this.switchBoxPillInputA = input; }} onChange={this.props.handleChange} required={this.props.config.required} disabled={this.props.config.disabled} readOnly={this.props.config.readonly} checked={this.props.config.checked} />\r\n        <label htmlFor={this.props.config.optionA.id}>{this.props.config.optionA.label}</label>\r\n        <input type=\"radio\" id={this.props.config.optionB.id} name={this.props.config.name} value={this.props.config.optionB.value} ref={(input) => { this.switchBoxPillInputB = input; }} onChange={this.props.handleChange} required={this.props.config.required} disabled={this.props.config.disabled} readOnly={this.props.config.readonly} checked={this.props.config.checked} />\r\n        <label htmlFor={this.props.config.optionB.id}>{this.props.config.optionB.label}</label>\r\n        {this.props.config.validationStatus === 2 &&\r\n          <div className={styleCDS.error}><i className=\"dfmxs dfmxs-canvas-error\"></i>{this.props.config.validationText.error}</div>\r\n        }\r\n        {this.props.config.validationStatus === 1 &&\r\n          <div className={styleCDS.info}><i className=\"dfmxs dfmxs-canvas-info\"></i>{this.props.config.validationText.info}</div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n    \r\n}\r\n\r\nexport default SwitchBoxPill;","import React, { Component } from 'react';\r\nimport styleCDS from \"../CDS.scss\"\r\nimport style from \"./CheckBox.scss\"\r\n\r\nclass CheckBox extends Component{\r\n    \r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        // [null -> Clean, 0 -> Info, 1 -> InfoInteractive, 2 -> Error , 3 -> Success]  \r\n        this.state = {\r\n            displayInfoInteractiveText: false,\r\n        };\r\n    }\r\n    \r\n    componentDidMount(){\r\n        // Attach events to the input raw DOM element\r\n        let comp = this;\r\n        this.checkBoxInput.addEventListener(\"focus\", function (e) {\r\n            comp.props.handleRawEvents(\"focus\", e);\r\n        });\r\n        this.checkBoxInput.addEventListener(\"blur\", function (e) {\r\n            comp.props.handleRawEvents(\"blur\", e);\r\n        });\r\n        this.checkBoxInput.addEventListener(\"paste\", function (e) {\r\n            comp.props.handleRawEvents(\"paste\", e);\r\n        });\r\n        this.checkBoxInput.addEventListener(\"click\", function (e) {\r\n            comp.props.handleRawEvents(\"click\", e);\r\n        });\r\n        this.checkBoxInput.addEventListener(\"change\", function (e) {\r\n            comp.props.handleRawEvents(\"change\", e);\r\n        });\r\n    }\r\n    \r\n    toggleInteractiveText(event){\r\n        event.preventDefault();\r\n        if(this.state.displayInfoInteractiveText){\r\n            this.setState({displayInfoInteractiveText: false});\r\n        }else{\r\n            this.setState({displayInfoInteractiveText: true});\r\n        }\r\n        \r\n        this.props.config.analyticsClickDetail();\r\n    }\r\n    \r\n    render(){\r\n        var sss = style.checkmark;\r\n        if(this.props.config.validationStatus === 2){\r\n            sss = style.checkmark + \" \" + style.cBError;\r\n            \r\n        }\r\n        return (\r\n            <div>\r\n                <label className={style.checkBoxContainer}>\r\n                   \r\n                   {this.props.config.label}\r\n                    <input type=\"checkbox\"  id={this.props.config.id} name={this.props.config.name} ref={(input) => { this.checkBoxInput = input; }} onChange={this.props.handleChange} required={this.props.config.required} disabled={this.props.config.disabled} readOnly={this.props.config.readonly}/>\r\n                    <span className={sss}></span>\r\n                    {this.props.config.details === true &&\r\n                        <span className={style.moreDetails}>\r\n                            <span className={styleCDS.cds3_caption} onClick={(event) => this.toggleInteractiveText(event)}>\r\n                                {this.props.config.detailsTitle}\r\n                                {this.state.displayInfoInteractiveText === true &&\r\n                                    <i className=\"dfmxs dfmxs-canvas-arrow-up\" aria-hidden=\"true\"></i>\r\n                                }\r\n                                {this.state.displayInfoInteractiveText === false &&\r\n                                    <i className=\"dfmxs dfmxs-canvas-arrow-down\" aria-hidden=\"true\"></i>\r\n                                }\r\n                            </span>\r\n                            {this.state.displayInfoInteractiveText === true &&\r\n                                <span className={styleCDS.cds3_paragraphSmall + \" \" + style.details} onClick={(event) => event.preventDefault()}>\r\n                                    {this.props.config.detailsContent}\r\n                                </span>\r\n                            }\r\n                        </span>\r\n                    }\r\n                </label>\r\n                {this.props.config.validationStatus === 2 &&\r\n                <div className={styleCDS.error}><i className=\"dfmxs dfmxs-canvas-error\"></i>{this.props.config.validationText.error}</div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default CheckBox;","import React, { Component } from 'react';\r\nimport styleCDS from \"../CDS.scss\"\r\nimport style from \"./RadioButton.scss\"\r\n\r\nclass RadioButton extends Component{\r\n    \r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        // [null -> Clean, 0 -> Info, 1 -> InfoInteractive, 2 -> Error , 3 -> Success]  \r\n        this.state = {\r\n            displayInfoInteractiveText: false,\r\n        };\r\n    }\r\n    \r\n    componentDidMount(){\r\n        // Attach events to the input raw DOM element\r\n        let comp = this;\r\n        this.checkBoxInput.addEventListener(\"focus\", function (e) {\r\n            comp.props.handleRawEvents(\"focus\", e);\r\n        });\r\n        this.checkBoxInput.addEventListener(\"blur\", function (e) {\r\n            comp.props.handleRawEvents(\"blur\", e);\r\n        });\r\n        this.checkBoxInput.addEventListener(\"paste\", function (e) {\r\n            comp.props.handleRawEvents(\"paste\", e);\r\n        });\r\n        this.checkBoxInput.addEventListener(\"click\", function (e) {\r\n            comp.props.handleRawEvents(\"click\", e);\r\n        });\r\n        this.checkBoxInput.addEventListener(\"change\", function (e) {\r\n            comp.props.handleRawEvents(\"change\", e);\r\n        });\r\n    }\r\n    \r\n    toggleInteractiveText(event){\r\n        event.preventDefault();\r\n        if(this.state.displayInfoInteractiveText){\r\n            this.setState({displayInfoInteractiveText: false});\r\n        }else{\r\n            this.setState({displayInfoInteractiveText: true});\r\n        }\r\n        \r\n        this.props.config.analyticsClickDetail();\r\n    }\r\n    \r\n    render(){\r\n        let sss = style.checkmark;\r\n        let isBroad = this.props.config.broad && true || false;\r\n        let broadStyle = isBroad && style.radioButtonBroadItem || '';\r\n        let dinamicClassName = `${style.radioButtonItem} ${broadStyle} `;\r\n        let isInline= this.props.isInline || false;\r\n        if(this.props.config.validationStatus === 2){\r\n            sss = style.checkmark + \" \" + style.cBError;\r\n            \r\n        }\r\n        return (\r\n            <div className={style.radioBox}>\r\n                {!isInline &&\r\n                <React.Fragment>\r\n                    <label className={style.filled} htmlFor={this.props.config.id}>{this.props.config.label}</label>\r\n                    <div id={this.props.config.id} className={style.radioButtonContainer}>\r\n                        \r\n                        {this.props.config.options.map((option, i) =>\r\n                                <label key={i} className={dinamicClassName}>\r\n                                <span>{option.label}</span>\r\n                                <input type=\"radio\"  \r\n                                       id={this.props.config.id+'_'+i} \r\n                                       name={this.props.config.id} \r\n                                       value={option.value}  \r\n                                       ref={(input) => { this.checkBoxInput = input; }} \r\n                                       onChange={this.props.handleChange} \r\n                                       required={this.props.config.required} \r\n                                       disabled={this.props.config.disabled} \r\n                                       readOnly={this.props.config.readonly}\r\n                                />\r\n                                <span className={style.radioButton}></span>\r\n                                </label>\r\n                            \r\n                        )}\r\n    \r\n                       \r\n                    </div>\r\n                    {this.props.config.validationStatus === 2 &&\r\n                    <div className={styleCDS.error}><i className=\"dfmxs dfmxs-canvas-error\"></i>{this.props.config.validationText.error}</div>\r\n                    }\r\n                </React.Fragment>\r\n                }\r\n                 {isInline &&\r\n                <div className={style.radio_container_inline}>\r\n                    <label className={style.filledMexican_inline} \r\n                            htmlFor={this.props.config.id}>\r\n                                {this.props.config.label}\r\n                    </label>\r\n                    <div id={this.props.config.id} \r\n                            className={style.radioButtonContainer_inline}>\r\n                        \r\n                        {this.props.config.options.map((option, i) =>\r\n                                <label key={i} className={style.radioButtonItem_inline}>\r\n                                <span>{option.label}</span>\r\n                                <input type=\"radio\"  \r\n                                       id={this.props.config.id+'_'+i} \r\n                                       name={this.props.config.id} \r\n                                       value={option.value}  \r\n                                       ref={(input) => { this.checkBoxInput = input; }} \r\n                                       onChange={this.props.handleChange} \r\n                                       required={this.props.config.required} \r\n                                       disabled={this.props.config.disabled} \r\n                                       readOnly={this.props.config.readonly}\r\n                                />\r\n                                <span className={style.radioButton_inline}></span>\r\n                                </label>\r\n                            \r\n                        )}\r\n    \r\n                       \r\n                    </div>\r\n                    {this.props.config.validationStatus === 2 &&\r\n                    <div className={styleCDS.error}><i className=\"dfmxs dfmxs-canvas-error\"></i>{this.props.config.validationText.error}</div>\r\n                    }\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default RadioButton;","import React, { Component } from 'react';\r\n\r\n\r\nimport TextBox from './../TextBox/TextBox.js';\r\nimport SelectBox from './../SelectBox/SelectBox.js';\r\nimport SwitchBoxPill from './../SwitchBoxPill/SwitchBoxPill.js';\r\nimport CheckBox from './../CheckBox/CheckBox.js';\r\nimport RadioButton from './../RadioButton/RadioButton.js';\r\n\r\n\r\n\r\n\r\nclass Input extends Component{\r\n   \r\n    render(){\r\n        let inputElement = null;\r\n        switch ( this.props.elementType ) {\r\n            case \"TextBox\":\r\n                inputElement = <TextBox handleOver={this.props.handleOver} config = {this.props.config} handleRawEvents = {this.props.config.handleRawEvents} handleChange = {this.props.config.handleChange}></TextBox>;\r\n                break;\r\n            case \"SelectBox\":\r\n                inputElement = <SelectBox config = {this.props.config} handleRawEvents = {this.props.config.handleRawEvents} handleChange = {this.props.config.handleChange}></SelectBox>;\r\n                break;\r\n            case \"SwitchBoxPill\":\r\n                inputElement = <SwitchBoxPill config = {this.props.config} handleRawEvents = {this.props.config.handleRawEvents} handleChange = {this.props.config.handleChange}></SwitchBoxPill>;\r\n                break;\r\n            case \"CheckBox\":\r\n                inputElement = <CheckBox config = {this.props.config} handleRawEvents = {this.props.config.handleRawEvents} handleChange = {this.props.config.handleChange}></CheckBox>;\r\n                break;\r\n            case \"RadioButton\":\r\n                inputElement = <RadioButton config = {this.props.config} \r\n                                            handleRawEvents = {this.props.config.handleRawEvents} \r\n                                            handleChange = {this.props.config.handleChange}\r\n                                            isInline={false}\r\n                                            >\r\n                                </RadioButton>;\r\n                break;\r\n            case \"RadioButton_Mexican\":\r\n                inputElement = <RadioButton config = {this.props.config} \r\n                                            handleRawEvents = {this.props.config.handleRawEvents} \r\n                                            handleChange = {this.props.config.handleChange}\r\n                                            isInline = {false}\r\n                                            />\r\n                break;\r\n            default:\r\n                inputElement = <div>{/*Default input empty blank div element*/}</div>;\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { inputElement }\r\n        </div>\r\n    );\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport default Input;","import React, {Component} from 'react';\r\nimport Input from '../CDS/Input/Input';\r\n\r\n\r\nexport class InputDemo extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.openKeyBoard = this.openKeyBoard.bind(this);\r\n\r\n        let configTelefonoCelular=  {\r\n            id: \"personal_telefonoCelular\",\r\n            type: \"tel\",\r\n            label: \"Teléfono celular\",\r\n            placeholder:\"10 dígitos\",\r\n            required: true,\r\n            disabled: false,\r\n            readonly: false,\r\n        \r\n            masking: true,\r\n            mask: \"(99) 9999-9999\",\r\n            maskChar: \" \",\r\n            alwaysShowMask: false,\r\n            defaultValue: '55 5555 5555',\r\n            validationStatus: null,\r\n            \r\n            handleRawEvents: handleRawEventsTelefonoCelular,\r\n            handleChange: handleChangeTelefonoCelular\r\n        };\r\n\r\n        this.state = {\r\n            counter: 0\r\n        }\r\n        \r\n        this.calle = {\r\n            id: \"personal_nombre\",\r\n            type: \"text\",\r\n            label: \"Calle\",\r\n            placeholder:  \"\",\r\n            required: true,\r\n            maxlength: 26,\r\n            dataType: \"alphabeticBlankSpaces\",        \r\n            masking: false,\r\n            alwaysShowMask: false,\r\n            \r\n            handleRawEvents: handleRawEventsPrimerNombre,\r\n            handleChange: handleChangePrimerNombre\r\n        };\r\n        this.numero = {\r\n            id: \"personal_nombre\",\r\n            type: \"text\",\r\n            label: \"Número\",\r\n            placeholder:  \"\",\r\n            required: true,\r\n            maxlength: 26,\r\n            dataType: \"alphabeticBlankSpaces\",        \r\n            masking: false,\r\n            alwaysShowMask: false,\r\n            \r\n            handleRawEvents: handleRawEventsPrimerNombre,\r\n            handleChange: handleChangePrimerNombre\r\n        };\r\n        this.cp = {\r\n            id: \"personal_nombre\",\r\n            type: \"text\",\r\n            label: \"Código Postal\",\r\n            placeholder:  \"\",\r\n            required: true,\r\n            maxlength: 26,\r\n            dataType: \"alphabeticBlankSpaces\",        \r\n            masking: false,\r\n            alwaysShowMask: false,\r\n            \r\n            handleRawEvents: handleRawEventsPrimerNombre,\r\n            handleChange: handleChangePrimerNombre\r\n        };\r\n        this.referencias = {\r\n            id: \"personal_nombre\",\r\n            type: \"text\",\r\n            label: \"Referencias\",\r\n            placeholder:  \"\",\r\n            required: true,\r\n            maxlength: 26,\r\n            dataType: \"alphabeticBlankSpaces\",        \r\n            masking: false,\r\n            alwaysShowMask: false,\r\n            \r\n            handleRawEvents: handleRawEventsPrimerNombre,\r\n            handleChange: handleChangePrimerNombre\r\n        };\r\n        \r\n        let thisTelefonoCelular;\r\n        let cellphone;\r\n        \r\n        let thisPrimerNombre;\r\n        \r\n        function handleRawEventsPrimerNombre(event, e, oldValue) {\r\n            console.log('ln 95');\r\n            if (event === \"blur\") {\r\n        \r\n                thisPrimerNombre = e.target.value;\r\n        \r\n            }\r\n        }\r\n        function handleChangePrimerNombre(event) {\r\n            thisPrimerNombre = event.target.value;\r\n        }\r\n        \r\n        function handleRawEventsTelefonoCelular(event, e, oldValue) {\r\n        \r\n            if (event === \"blur\") {\r\n                thisTelefonoCelular = e.target.value;\r\n            }\r\n        }\r\n        \r\n        function handleChangeTelefonoCelular(event) {\r\n            const cursorPosition = event.target.selectionStart;\r\n            cellphone = event.target.value;\r\n            cellphone.replace(/[^0-9\\\\.]+/g, '');\r\n            event.target.setSelectionRange(cursorPosition, cursorPosition);\r\n            thisTelefonoCelular = cellphone;\r\n        }\r\n\r\n    }\r\n\r\n    openKeyBoard(){\r\n        let toFocus = document.getElementById(this.calle.id);\r\n        setTimeout(function(){\r\n            toFocus.focus();\r\n        },1)\r\n        return \"keyboard open\";\r\n    }\r\n    \r\n    componentDidMount() {\r\n        if(this.state.counter === 0) {\r\n            this.openKeyBoard();\r\n        }\r\n    }\r\n    render() {\r\n        return(\r\n         <div className=\"mt4\">\r\n\t\t\t<Input config={this.calle}  elementType=\"TextBox\"/>\r\n\t\t\t<Input config={this.numero}  elementType=\"TextBox\"/>\r\n\t\t\t<Input config={this.cp}  elementType=\"TextBox\"/>\r\n\t\t\t<Input config={this.referencias}  elementType=\"TextBox\"/>\r\n         </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default  InputDemo;\r\n","import React, { useState } from 'react';\r\n\r\nimport InputDemo from '../Input/InputDemo';\r\n\r\n\r\nfunction Store({ device }) {\r\n\tconst [index, setIndex] = useState(0);\r\n\tconst { screenSize } = device;\r\n\tconsole.log(screenSize, device);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<nav className=\"flex justify-between bb b--gray\">\r\n\t\t\t\t\t<a className=\"link white-70 hover-white no-underline flex items-center pa3\" href=\"\">\r\n\t\t\t\t\t\t<svg\r\n\t\t\t\t\t\tclassName=\"dib h1 w1\"\r\n\t\t\t\t\t\tdata-icon=\"grid\"\r\n\t\t\t\t\t\tviewBox=\"0 0 32 32\"\r\n\t\t\t\t\t\tstyle={{fill:'green'}}>\r\n\t\t\t\t\t\t<title>Super Normal Icon Mark</title>\r\n\t\t\t\t\t\t<path d=\"M2 2 L10 2 L10 10 L2 10z M12 2 L20 2 L20 10 L12 10z M22 2 L30 2 L30 10 L22 10z M2 12 L10 12 L10 20 L2 20z M12 12 L20 12 L20 20 L12 20z M22 12 L30 12 L30 20 L22 20z M2 22 L10 22 L10 30 L2 30z M12 22 L20 22 L20 30 L12 30z M22 22 L30 22 L30 30 L22 30z\">\r\n\t\t\t\t\t\t</path>\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<div className=\"flex-grow pa3 flex items-center\">\r\n\t\t\t\t\t\t<a className=\"f6 link dib black dim mr3 mr4-ns\" href=\"#0\">About</a>\r\n\t\t\t\t\t\t<a className=\"f6 link dib black dim mr3 mr4-ns\" href=\"#0\">Sign In</a>\r\n\t\t\t\t\t\t<a className=\"\tf6 dib black\r\n\t\t\t\t\t\t\t\t\t\tbg-animate \r\n\t\t\t\t\t\t\t\t\t\thover-bg-green\r\n\t\t\t\t\t\t\t\t\t\thover-white \r\n\t\t\t\t\t\t\t\t\t\tno-underline \r\n\t\t\t\t\t\t\t\t\t\tpv2 ph4 \r\n\t\t\t\t\t\t\t\t\t\tbr-pill \r\n\t\t\t\t\t\t\t\t\t\tba \r\n\t\t\t\t\t\t\t\t\t\tb--green\" href=\"#0\">Sign Up</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</nav>\r\n\t\t\t<div className=\"flex flex-column items-center\">\r\n\t\t\t\t\r\n\t\t\t\t<InputDemo />\r\n\t\t\t\t<div className=\"flex items-center justify-center pa4\">\r\n\t\t\t\t\t<a href=\"#0\" className=\"f5 no-underline black bg-animate hover-bg-black hover-white inline-flex items-center pa3 ba border-box mr4\">\r\n\t\t\t\t\t\t<svg className=\"w1\" data-icon=\"chevronLeft\" viewBox=\"0 0 32 32\" style={{fill:'currentcolor'}}>\r\n\t\t\t\t\t\t\t<title>chevronLeft icon</title>\r\n\t\t\t\t\t\t\t<path d=\"M20 1 L24 5 L14 16 L24 27 L20 31 L6 16 z\"></path>\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t<span className=\"pl1\">Previous</span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<a href=\"#0\" className=\"f5 no-underline black bg-animate hover-bg-black hover-white inline-flex items-center pa3 ba border-box\">\r\n\t\t\t\t\t\t<span className=\"pr1\">Next</span>\r\n\t\t\t\t\t\t<svg className=\"w1\" data-icon=\"chevronRight\" viewBox=\"0 0 32 32\" style={{fill:'currentcolor'}}>\r\n\t\t\t\t\t\t<title>chevronRight icon</title>\r\n\t\t\t\t\t\t<path d=\"M12 1 L26 16 L12 31 L8 27 L18 16 L8 5 z\"></path>\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Store;\r\n","import React from 'react';\r\nimport Store from './components/Store';\r\nimport useDevice from 'usedevice';\r\nimport './App.css';\r\n\r\nconst breakpoints = [\r\n\t{ name: 'phone', min: 0, max: 450 },\r\n\t{ name: 'tablet', min: 451, max: 1080 },\r\n\t{ name: 'desktop', min: 1080, max: Infinity },\r\n];\r\n\r\nfunction App() {\r\n\tconst device = useDevice({ breakpoints });\r\n\treturn <Store device={device} />;\r\n}\r\n\r\nexport default App;\r\n","import App from \"./App\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Router } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <Router history={history}>\r\n    <App history={history} />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textBoxContainer\":\"TextBox_textBoxContainer__2os_t\",\"eraseMarginBottom\":\"TextBox_eraseMarginBottom__15ygj\",\"secondaryLabel\":\"TextBox_secondaryLabel__QDtKF\",\"filled\":\"TextBox_filled__2rOFB\",\"bar\":\"TextBox_bar__2tLxm\",\"inputFont\":\"TextBox_inputFont__2LW7X\"};"],"sourceRoot":""}